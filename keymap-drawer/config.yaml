draw_config:
  #separate_combo_diagrams: true
  draw_key_sides: true
  append_colon_to_layer_header: false
  sticky_label: Sticky
  svg_style: |
    /* inherit to force styles through use tags */
    svg path {
        fill: inherit;
    }

    .combo {
        display: none !important;
    }

    /* font and background color specifications */
    svg.keymap {
        font-family: Iosevka,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;
        font-size: 13px;
        font-kerning: normal;
        text-rendering: optimizeLegibility;
        fill: #24292e;
    }

    /* default key styling */
    rect.key {
        fill: #f6f8fa;
        stroke: #c9cccf;
        stroke-width: 1;
    }

    /* default key side styling, only used is draw_key_sides is set */
    rect.side {
        filter: brightness(90%);
    }

    /* color accent for combo boxes */
    rect.combo, rect.combo-separate {
        fill: #cdf;
    }

    /* color accent for held keys */
    rect.held, rect.combo.held {
        fill: #fdd;
    }

    /* color accent for ghost (optional) keys */
    rect.ghost, rect.combo.ghost {
        stroke-dasharray: 4, 4;
        stroke-width: 2;
    }

    text {
        text-anchor: middle;
        dominant-baseline: middle;
    }

    /* styling for layer labels */
    text.label {
        font-weight: bold;
        text-anchor: start;
        stroke: white;
        stroke-width: 2;
        paint-order: stroke;
    }

    /* styling for combo tap, and key hold/shifted label text */
    text.combo, text.hold, text.shifted {
        font-size: 10px;
        fill: #555;
    }

    text.hold {
       text-anchor: middle;
       dominant-baseline: auto;
    }

    text.shifted {
        text-anchor: middle;
        dominant-baseline: hanging;
    }

    /* styling for hold/shifted label text in combo box */
    text.combo.hold, text.combo.shifted {
        font-size: 8px;
    }

    /* lighter symbol for transparent keys */
    text.trans {
        fill: #7b7e81;
    }

    /* styling for combo dendrons */
    path.combo {
        stroke-width: 1;
        stroke: gray;
        fill: none;
    }

    /* Start Tabler Icons Cleanup */
    /* cannot use height/width with glyphs */
    .icon-tabler > path {
        fill: inherit;
        stroke: inherit;
        stroke-width: 2;
    }
    /* hide tabler's default box */
    .icon-tabler > path[stroke="none"][fill="none"] {
        visibility: hidden;
    }

parse_config:
  raw_binding_map:
    '&caps_word': Caps Word
    '&bootloader': Boot
    '&key_repeat': Repeat
    '&bt BT_SEL 0':
      t: $$tabler:bluetooth$$
      h: 1
    '&bt BT_SEL 1':
      t: $$tabler:bluetooth$$
      h: 2
    '&bt BT_SEL 2':
      t: $$tabler:bluetooth$$
      h: 3
    '&bt BT_SEL 3':
      t: $$tabler:bluetooth$$
      h: 4
    '&bt BT_SEL 4':
      t: $$tabler:bluetooth$$
      h: 5
    '&bt BT_SEL 5':
      t: $$tabler:bluetooth$$
      h: 6
    '&bt BT_CLR':
      t: $$mdi:bluetooth-off$$
      h: Clear
    '&bt BT_PRV':
      t: $$mdi:bluetooth$$
      h: Prev
    '&bt BT_NXT':
      t: $$mdi:bluetooth$$
      h: Next

  zmk_combos: {}
  zmk_keycode_map:
    LCTL:
      t: $$mdi:apple-keyboard-control$$
      h: Control
    LGUI:
      t: $$mdi:apple-keyboard-command$$
      h: Gui
    LSFT:
      t: $$mdi:apple-keyboard-shift$$
      h: Shift
    LALT:
      t: $$mdi:apple-keyboard-option$$
      h: Alt
    LC(G): C-g
    LA(BSPC): Bspc Word
    LG(F): Find
    RG(Z): Undo
    RG(X): Cut
    RG(C): Copy
    RG(V): Paste
    ESC: Esc
    PG_UP: Page Up
    PG_DN: Page Down
    HOME: Home
    END: End
    SPACE: $$mdi:keyboard-space$$
    LEFT: $$mdi:arrow-left$$
    RIGHT: $$mdi:arrow-right$$
    UP: $$mdi:arrow-up$$
    DOWN: $$mdi:arrow-down$$
    BSPC: $$mdi:backspace-outline$$
    DEL: $$mdi:backspace-reverse-outline$$
    CAPS: $$mdi:apple-keyboard-caps$$
    RET: $$mdi:keyboard-return$$
    LG(LS(LBKT)): Prev Tab
    LG(LS(RBKT)): Next Tab

    LC(C_BRI_UP):
      t: $$tabler:brightness-up$$
      h: Bri+
    LC(C_BRI_DN):
      t: $$tabler:brightness-down$$
      h: Bri-
    C_PP:
      t: $$tabler:player-play$$
      h: Play/Pause
    C_PREV:
      t: $$tabler:player-track-prev$$
      h: Prev
    C_NEXT:
      t: $$tabler:player-track-next$$
      h: Next
    C_VOL_UP:
      t: $$tabler:volume$$
      h: Vol+
    C_VOL_DN:
      t: $$tabler:volume-2$$
      h: Vol-
    C_MUTE:
      t: $$tabler:volume-off$$
      h: Mute

    EXCLAMATION: '!'
    EXCL: '!'
    AT_SIGN: '@'
    AT: '@'
    HASH: '#'
    POUND: '#'
    DOLLAR: $
    DLLR: $
    PERCENT: '%'
    PRCNT: '%'
    CARET: ^
    AMPERSAND: '&'
    AMPS: '&'
    ASTERISK: '*'
    ASTRK: '*'
    STAR: '*'
    LEFT_PARENTHESIS: (
    LPAR: (
    RIGHT_PARENTHESIS: )
    RPAR: )
    EQUAL: '='
    PLUS: +
    MINUS: '-'
    UNDERSCORE: _
    UNDER: _
    SLASH: /
    FSLH: /
    QUESTION: '?'
    QMARK: '?'
    BACKSLASH: \
    BSLH: \
    PIPE: '|'
    NON_US_BACKSLASH: \
    PIPE2: '|'
    NON_US_BSLH: '|'
    SEMICOLON: ;
    SEMI: ;
    COLON: ':'
    SINGLE_QUOTE: ''''
    SQT: ''''
    APOSTROPHE: <
    APOS: .
    DOUBLE_QUOTES: '"'
    DQT: '"'
    COMMA: ','
    LESS_THAN: <
    LT: <
    PERIOD: .
    DOT: .
    GREATER_THAN: '>'
    GT: '>'
    LEFT_BRACKET: '['
    LBKT: '['
    LEFT_BRACE: '{'
    LBRC: '{'
    RIGHT_BRACKET: ']'
    RBKT: ']'
    RIGHT_BRACE: '}'
    RBRC: '}'
    GRAVE: '`'
    TILDE: '~'
    NON_US_HASH: '#'
    NUHS: '#'
    TILDE2: '~'
